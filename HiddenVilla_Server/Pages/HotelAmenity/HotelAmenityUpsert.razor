@page "/hotel-amenity/edit/{id:int}"
@page "/hotel-amenity/create"
@using Models;
@using Business.Repositories.IRepositories;
@inject IHotelAmenityRepository  hotelAmenityRepository
@inject NavigationManager navManager;
@attribute [Authorize(Roles = CommonFiles.StaticDetail.Role_Admin)]


<div class="row mt-2 mb-5">
    <h3 class="card-title text-info mb-3 ml-3">@Title Hotel Room</h3>
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <EditForm Model="hotelAmenityModel" OnValidSubmit="HandleHotelAmenityUpsert">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        <label>Name</label>
                        <InputText @bind-Value="hotelAmenityModel.Name" class="form-control"></InputText>
                        <ValidationMessage For="() =>hotelAmenityModel.Name"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <label>Description</label>
                        <InputTextArea @bind-Value="hotelAmenityModel.Description" class="form-control"></InputTextArea>
                        <ValidationMessage For="() =>hotelAmenityModel.Description"></ValidationMessage>

                    </div>
                    <div class="form-group">
                        <label>Timing</label>
                        <InputText @bind-Value="hotelAmenityModel.Timing" class="form-control"></InputText>
                        <ValidationMessage For="() =>hotelAmenityModel.Timing"></ValidationMessage>

                    </div>
                    <div class="form-group">
                        <label>Icon Style</label>
                        <InputText @bind-Value="hotelAmenityModel.Icon" class="form-control"></InputText>
                    </div>

                    <div class="form-group">
                        <button class="btn btn-primary">@Title Room</button>
                        <NavLink href="hotel-amenity" class="btn btn-secondary">Back To Index</NavLink>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>





@code {
    [Parameter]
    public int? id { get; set; }

    private HotelAmenityDTO hotelAmenityModel { get; set; } = new HotelAmenityDTO();
    private string Title { get; set; }

    protected async override Task OnInitializedAsync()
    {
        if (id == null)
        {
            Title = "Create";
            hotelAmenityModel = new HotelAmenityDTO();
        }
        else
        {
            Title = "Update";
            hotelAmenityModel = await hotelAmenityRepository.GetHotelAmenityById(id.Value);
        }

    }

    private async Task HandleHotelAmenityUpsert()
    {
        if ((hotelAmenityModel.Id != 0) && (Title == "Update"))
        {
            hotelAmenityModel = await hotelAmenityRepository.UpdateAmenity(hotelAmenityModel.Id, hotelAmenityModel);
        }
        else
        {
            await hotelAmenityRepository.CreateAmenity(hotelAmenityModel);
        }
        navManager.NavigateTo("hotel-amenity");
    }
}
